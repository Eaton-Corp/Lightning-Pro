<UserControl x:Class="LightningPRO.BOMShoppingCart"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:LightningPRO"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="1000" MinWidth="700" Loaded="BOMCart_OnLoaded" >
    
    <UserControl.Resources>
        <!--<local:ReplaceButtonVisibilityConverter x:Key="ReplaceButtonVisibilityConverter"/>-->
        <BooleanToVisibilityConverter x:Key="BoolToVisConverter"/>
       
        <Style TargetType="Button">
            <Setter Property="Background" Value="AliceBlue"/>
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect ShadowDepth="0" Opacity="0.2" BlurRadius="8"/>
                </Setter.Value>
            </Setter>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                CornerRadius="5"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <ScaleTransform/>
                            </Border.RenderTransform>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="border"
                                         Storyboard.TargetProperty="RenderTransform.ScaleX"
                                         To="1.05" Duration="0:0:0.1"/>
                                        <DoubleAnimation Storyboard.TargetName="border"
                                         Storyboard.TargetProperty="RenderTransform.ScaleY"
                                         To="1.05" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="border"
                                         Storyboard.TargetProperty="RenderTransform.ScaleX"
                                         To="1.0" Duration="0:0:0.1"/>
                                        <DoubleAnimation Storyboard.TargetName="border"
                                         Storyboard.TargetProperty="RenderTransform.ScaleY"
                                         To="1.0" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Bread crumb styling-->
        <Style x:Key="BreadcrumbStyle" TargetType="ItemsControl">
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="0,0,0,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ItemsControl">
                        <Border Background="LightBlue" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            CornerRadius="3">
                            <StackPanel>
                                <ItemsPresenter/>
                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
      
        <Style x:Key="DataGridCellStyle" TargetType="DataGridCell">
            <Setter Property="Padding" Value="2,2,2,2"/>
            
        </Style>

        <Style x:Key="EatonDataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Padding" Value="2,2,2,2"/>
            <!-- Adjust padding here -->
            <!-- Other setters -->
        </Style>

        <!-- Style for DataGrid cell padding -->
        <Style x:Key="CustomDataGridCellStyle" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
            <Setter Property="Padding" Value="5,5,5,5"/>
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
            <!-- Adjust padding here -->
        </Style>

        <!-- Style for DataGrid column header padding -->
        <Style x:Key="CustomDataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
            <Setter Property="Padding" Value="5,15,5,15"/>
            <!-- Adjust padding here -->
        </Style>

        <Style x:Key="BackButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignBody}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="10,0,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Gray"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="GreenRowStyle" TargetType="DataGridRow">
            <Setter Property="Background" Value="LightGreen"/>
        </Style>
        <Style x:Key="RedRowStyle" TargetType="DataGridRow">
            <Setter Property="Background" Value="Salmon"/>
        </Style>
        <Style x:Key="AdditionalRowStyle" TargetType="DataGridRow">
            <Setter Property="Background" Value="LightGreen"/>
        </Style>
        <Style x:Key="MissingRowStyle" TargetType="DataGridRow">
            <Setter Property="Background" Value="LightCoral"/>
        </Style>

    </UserControl.Resources>
    <Grid >
        <Grid x:Name="MainView" Visibility="Visible">
            <Grid.RowDefinitions>
                <RowDefinition Height="60"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Button Content="Alternate BOMS"
                Grid.Row="0"
                Grid.Column="3"
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                Margin="15"
                MinHeight="30"
                MinWidth="120"
                Padding="5"
                FontSize="13"
                Background="Red"
                Foreground="{DynamicResource MaterialDesignBody}"
                BorderThickness="1"
                Cursor="Hand"
                Name="Alert"
                Click="AlertButton_Click"/>
            <TextBlock Grid.Row="0" Grid.Column="3"
               Text="View historical BOMs from similar orders."
               FontSize="10"
               FontWeight="Bold"
               Foreground="Gray"
               HorizontalAlignment="Right"
               VerticalAlignment="Top"
               Margin="15,45,15,0"/>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="50"/>
                    <ColumnDefinition Width="50"/>
                </Grid.ColumnDefinitions>

                <Label Grid.Row="0" Grid.Column="0" 
               Content="BOM Cart" 
               FontSize="20" 
               FontWeight="Bold" 
               HorizontalAlignment="Left" 
               VerticalAlignment="Center" 
               Margin="10"/>
                <TextBlock Grid.Row="0" Grid.Column="0"
               Text="Please pick and choose materials for the job."
               FontSize="10"
               Foreground="Gray"
               FontWeight="Bold"
               HorizontalAlignment="Left"
               VerticalAlignment="Center"
               Margin="15,35,0,0"/>
            </Grid>

            <GroupBox Header="BOM CART" FontWeight="Bold"  Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3"  Margin="10">
                <local:EatonDataGrid x:Name="myEatonDataGrid"  AutoGenerateColumns="False" IsReadOnly="True"  ItemsSource="{Binding PartItems}">
                    <DataGrid.CellStyle>
                        <Style TargetType="DataGridCell" BasedOn="{StaticResource CustomDataGridCellStyle}"/>
                    </DataGrid.CellStyle>
                    <DataGrid.ColumnHeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource CustomDataGridColumnHeaderStyle}"/>
                    </DataGrid.ColumnHeaderStyle>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Part #" Binding="{Binding PartNumber}" Width="120"/>
                        <DataGridTextColumn Header="Locator" Binding="{Binding Locator}" Width="100"/>
                        <DataGridTextColumn Header="Description" Binding="{Binding Description}" Width="*" />
                    </DataGrid.Columns>
                </local:EatonDataGrid>
            </GroupBox>
            <local:MaterialCatalogControl x:Name="MaterialCatalogControl" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3"/>
        </Grid>
        <Grid x:Name="AlternateBOMView" Visibility="Collapsed" Background="{DynamicResource MaterialDesignPaper}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="75"/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="35"/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Button Grid.Column="0" Grid.Row="0" Content="← Back" Click="BackButton_Click" Width="60" Height="24" Background="Gray"/>    
                
        
            <TextBlock Grid.Row="0" Grid.Column="1" 
               Text="Alternate BOM View" 
               FontSize="15" 
               FontWeight="Bold" 
               Foreground="{DynamicResource MaterialDesignBody}"
               HorizontalAlignment="Left" 
               VerticalAlignment="Top" 
               Margin="10, 0, 0,0"/>
            <TextBlock Grid.Row="0" Grid.Column="1" 
               Text="Viewing alternate BOMs for similar GO"
               FontSize="12" 
               FontWeight="Bold" 
               Foreground="Gray" 
               HorizontalAlignment="Left" 
               VerticalAlignment="Bottom" 
               Margin="10,0,0,0"/>

            <GroupBox Header="ALTERNATE BOMS" FontWeight="Bold" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Grid.RowSpan="2" Margin="10">
                <local:EatonDataGrid x:Name="AlternateDataGrid" AutoGenerateColumns="False" IsReadOnly="True">
                    <DataGrid.CellStyle>
                        <Style TargetType="DataGridCell" BasedOn="{StaticResource CustomDataGridCellStyle}"/>
                    </DataGrid.CellStyle>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="GOItem" Binding="{Binding GOItem}" Width="140"/>
                        <DataGridTextColumn Header="Usage" Binding="{Binding TimesUsed}" Width="70"/>
                        <DataGridTextColumn Header="Date" Binding="{Binding DateCreated, StringFormat='{}{0:MM/dd/yyyy}'}" Width="120" />
                        <DataGridTextColumn Header="Creator" Binding="{Binding Creator}" Width="120" />
                        <DataGridTextColumn Header="Score" Binding="{Binding SimilarityScore, StringFormat='{}{0:0}%'}" Width="75" />
                    </DataGrid.Columns>
                </local:EatonDataGrid>
                
            </GroupBox>
        </Grid>


        <Grid x:Name="AlternateBomBreakdown" Visibility="Collapsed" Background="{DynamicResource MaterialDesignPaper}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="75"/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="45"/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Button Content="Import BOM"
                Grid.Row="0"
                Grid.Column="2"
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                Margin="5"
                Height="24"
                MinWidth="100"
                Padding="1"
                FontSize="14"
                Background="Red"
                Foreground="{DynamicResource MaterialDesignBody}"
                BorderThickness="1"
                Cursor="Hand"
                Name="Import"
                Click="ImportButton_Click"/>
            <TextBlock Grid.Row="0" FontWeight="Bold" Grid.Column="2"
               Text="Import BOM and its drawings into your workspace"
               FontSize="12"
               Foreground="Gray"
               HorizontalAlignment="Right"
               VerticalAlignment="Bottom"
               Margin="10,15,10,0"/>


            <TextBlock Grid.Row="0" FontWeight="Bold" Grid.Column="1"
               Text="Viewing breakdown of alternate BOM for {Binding GOItem}"
               FontSize="12"
               Foreground="Gray"
               HorizontalAlignment="Left"
               VerticalAlignment="Top"
               Margin="10,15,10,0"/>
            <StackPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"
            Orientation="Horizontal"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Margin="22,0,10,0">

                <Border Width="15" Height="15" Background="Salmon" Margin="0,0,5,0"/>
                <TextBlock Text="Missing from BOM"
               FontSize="12"
               Foreground="Gray"
               VerticalAlignment="Center"/>

            
                <Border Width="20" Height="15" Background="Transparent"/>

                <Border Width="15" Height="15" Background="LightGreen" Margin="5,0,5,0"/>
                <TextBlock Text="Additional in BOM"
               FontSize="12"
               Foreground="Gray"
               VerticalAlignment="Center"/>
            </StackPanel>


            <TextBlock Grid.Row="0" Grid.Column="1" 
               Text="Alternate BOM Breakdown" 
               FontSize="15" 
               FontWeight="Bold" 
               Foreground="{DynamicResource MaterialDesignBody}"
               HorizontalAlignment="Left" 
               VerticalAlignment="Top" 
               Margin="10, 0,0,0"/>
            
            <Button Grid.Column="0" Grid.Row="0" Content="← Back" Click="BackButton_Click" Width="60" Height="24" Background="Gray"/>

            <GroupBox Header="ALTERNATE BREAKDOWN" FontWeight="Bold" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Grid.RowSpan="1" Margin="20">
                <local:EatonDataGrid x:Name="AlternateBOMBreakdown" AutoGenerateColumns="False" IsReadOnly="True">
                    <DataGrid.CellStyle>
                        <Style TargetType="DataGridCell" BasedOn="{StaticResource CustomDataGridCellStyle}"/>
                    </DataGrid.CellStyle>
                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Status}" Value="Additional">
                                    <Setter Property="Background" Value="LightGreen"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Status}" Value="Missing">
                                    <Setter Property="Background" Value="Salmon"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>

                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Part #" Binding="{Binding PartNumber}" Width="120"/>
                        <DataGridTextColumn Header="Locator" Binding="{Binding Locator}" Width="100"/>
                        <DataGridTextColumn Header="QTY" Binding="{Binding Quantity}" Width="60" />
                        <DataGridTextColumn Header="Description" Binding="{Binding Description}" Width="400"/>
                    </DataGrid.Columns>
                </local:EatonDataGrid>
            </GroupBox>
            
            <local:ImageViewer x:Name="ImageView" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" />







        </Grid>
    </Grid>
</UserControl>
